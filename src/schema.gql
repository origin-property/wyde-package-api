# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  accessToken: String!
  accessTokenExpires: Int!
  refreshToken: String!
  refreshTokenExpires: Int!
  user: User!
}

type Category {
  createdAt: Date!
  createdBy: String
  description: String
  id: ID!
  name: String!
  updatedAt: Date!
  updatedBy: String
}

input CreateFileInput {
  fileName: String
  filePath: String
  isPublic: Boolean = true
  refId: String
}

input CreateOptionValueInput {
  image: String
  price: Float = 0
  value: String!
}

input CreatePackageInput {
  description: String
  images: [CreateFileInput!]!
  isActive: Boolean!
  items: [PackageItemInput!]!
  name: String!
  projectId: String!
  unitId: String!
}

input CreateProductInput {
  """The UUID of the product category"""
  categoryId: String!
  description: String
  name: String!
  options: [CreateProductOptionInput!] = []

  """The UUID of the product type"""
  productTypeId: String!
  variants: [CreateProductVariantInput!]!
}

input CreateProductOptionInput {
  name: String!
  values: [CreateOptionValueInput!]!
}

input CreateProductVariantInput {
  images: [CreateVariantImageInput!] = []
  optionValues: [String!] = []
  price: Float!
  stock: Float! = 0
}

input CreateRoleInput {
  description: String
  name: String
}

input CreateVariantImageInput {
  altText: String
  fileCurName: String!
  fileExtension: String!
  filePath: String!
  filePrevName: String
  isMain: Boolean! = false
  sortOrder: Float! = 0
}

"""Date custom scalar type (UTC)"""
scalar Date

type File {
  createdAt: Date!
  deletedAt: Date
  fileBucket: String!
  fileName: String!
  filePath: String!
  id: ID!
  isPublic: Boolean!
  refId: String!
  updatedAt: Date!
}

input FindAllProductsInput {
  """จำนวนรายการต่อหน้า"""
  limit: Int = 10

  """หน้าปัจจุบัน"""
  page: Int = 1

  """คำค้นหา"""
  searchText: String
}

type Floor {
  id: Int!
  nameEn: String
  nameTh: String
  projectId: String
  towerId: Int
}

type Model {
  id: String!
  modelType: ModelType!
  modelTypeId: String
  nameEn: String
  nameTh: String
  projectId: String
  shortName: String
}

type ModelType {
  code: String
  id: String!
  nameEn: String
  nameTh: String
}

type Mutation {
  createFile(createFileInput: CreateFileInput!): File!
  createPackage(createPackageInput: CreatePackageInput!): Package!
  createProduct(createProductInput: CreateProductInput!): Product!
  createRole(createRoleInput: CreateRoleInput!): Role!
  refreshToken: Auth!
  removeFile(id: ID!): Boolean!
  removePackage(id: String!): Package!
  removeProduct(id: ID!): Product!
  removeRole(id: ID!): Boolean!
  signIn(password: String!, username: String!): Auth!
  updateFile(updateFileInput: UpdateFileInput!): File!
  updateProduct(updateProductInput: UpdateProductInput!): Product!
  updateRole(updateRoleInput: UpdateRoleInput!): Role!
}

type Package {
  description: String
  id: String!
  isActive: Boolean!
  name: String!
  project: Project!
  projectId: String!
  unit: Unit!
  unitId: String!
}

input PackageItemInput {
  productVariantId: String!
  quantity: Float!
  specialPrice: Float!
  type: PackageItemType!
}

enum PackageItemType {
  DEFAULT
  EQUIVALENT
}

type Product {
  category: Category!
  categoryId: String
  createdAt: Date!
  createdBy: String
  description: String
  id: ID!
  name: String!
  options: [ProductOption!]!
  productType: ProductType!
  productTypeId: String
  updatedAt: Date!
  updatedBy: String
  variants: [ProductVariant!]!
}

type ProductOption {
  createdAt: Date!
  createdBy: String
  id: ID!
  name: String!
  optionValues: [ProductOptionValue!]!
  product: Product!
  updatedAt: Date!
  updatedBy: String
}

type ProductOptionValue {
  createdAt: Date!
  createdBy: String
  id: ID!
  image: String
  price: Float!
  productOption: ProductOption!
  updatedAt: Date!
  updatedBy: String
  value: String!
}

type ProductType {
  createdAt: Date!
  createdBy: String
  description: String
  id: ID!
  name: String!
  updatedAt: Date!
  updatedBy: String
}

type ProductVariant {
  attributes: [VariantAttribute!]!
  createdAt: Date!
  createdBy: String
  id: ID!
  images: [ProductVariantImage!]!
  optionValues: [ProductOptionValue!]!
  price: Float!
  product: Product!
  sku: String!
  stock: Int!
  updatedAt: Date!
  updatedBy: String
}

type ProductVariantImage {
  altText: String
  createdAt: Date!
  createdBy: String
  fileCurName: String
  fileExtension: String
  filePrevName: String
  id: ID!
  isMain: Boolean!
  sortOrder: Int!
  updatedAt: Date!
  updatedBy: String
}

type Project {
  id: ID!
  nameEn: String!
  nameTh: String!
  towers: [Tower!]!
  units: [Unit!]!
}

type Query {
  file(id: ID!): File!
  files: [File!]!
  floor(id: ID!): Floor!
  floors(towerId: Int!): [Floor!]!

  """ข้อมูลผู้ใช้งานปัจจุบัน"""
  me: User!
  model(id: ID!): Model!
  models(projectId: ID!): [Model!]!
  package(id: String!): Package!
  packagesByUnit(unitId: String!): [Package!]!
  product(id: Int!): Product!
  productByVariantId(variantId: ID!): Product!
  products(findAllProductsInput: FindAllProductsInput!): [Product!]!
  project(id: ID!): Project!
  projects: [Project!]!
  role(id: ID!): Role!
  roles: [Role!]!
  tower(id: ID!): Tower!
  towers(projectId: ID!): [Tower!]!
  unit(id: ID!): Unit!
  units(projectId: ID!): [Unit!]!

  """ข้อมูลผู้ใช้งานตามรหัสผู้ใช้งาน"""
  user(id: ID!): User!

  """ข้อมูลผู้ใช้งานทั้งหมด"""
  users: [User!]!
}

type Role {
  createdAt: Date!
  deletedAt: Date
  description: String
  id: ID!
  name: String!
  updatedAt: Date!
}

type Tower {
  floors: [Floor!]!
  id: Int!
  nameEn: String
  nameTh: String
  projectId: String
}

type Unit {
  houseNumber: String
  id: ID!
  model: Model!
  modelId: String
  projectId: String!
  unitNumber: String!
}

input UpdateFileInput {
  fileName: String
  filePath: String
  id: ID!
  isPublic: Boolean = true
  refId: String
}

input UpdateProductInput {
  categoryId: String
  createOptions: [CreateProductOptionInput!]
  createVariants: [CreateProductVariantInput!]
  deleteOptionIds: [ID!]
  deleteVariantIds: [ID!]
  description: String
  id: ID!
  name: String
  productTypeId: String
  updateVariants: [UpdateProductVariantInput!]
}

input UpdateProductVariantInput {
  data: UpdateVariantDataInput!
  id: ID!
}

input UpdateRoleInput {
  description: String
  id: ID!
  name: String
}

input UpdateVariantDataInput {
  price: Float
  stock: Float
}

type User {
  createdAt: Date!
  createdBy: User
  deletedAt: Date
  deletedBy: User
  email: String!
  employeeId: String!
  firstnameEng: String
  firstnameThai: String
  id: ID!
  lastnameEng: String
  lastnameThai: String
  updatedAt: Date!
  updatedBy: User
  username: String!
}

type VariantAttribute {
  createdAt: Date!
  createdBy: String
  id: String!
  name: String!
  optionValue: ProductOptionValue!
  updatedAt: Date!
  updatedBy: String
}